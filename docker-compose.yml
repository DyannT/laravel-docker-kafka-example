version: '2.2'
services:
    nginx:
        build:
            context: .
            dockerfile: docker/Dockerfile.nginx
            args:
                PHP_FPM_SERVER: php
                PHP_FPM_PORT: 9000
        ports:
            - ${DOCKER_NGINX_EXTERNAL_PORT-8000}:80
        depends_on:
            - php
        volumes:
            - .:/var/www/
        networks:
            - backend

    php:
        build:
            context: .
            dockerfile: docker/Dockerfile
            args:
                XDEBUG: "true"
        volumes:
            - .:/var/www/
            - ./docker/php.ini:/usr/local/etc/php/conf.d/php.ini
        environment:
            APP_ENV: local
        networks:
            - backend

    redis:
        image: redis:5.0.6
        ports:
            - ${DOCKER_REDIS_EXTERNAL_PORT-6379}:6379
        networks:
            - backend

    mysql:
        image: mysql:8.0
        volumes:
            - mysqldb:/var/lib/mysql
        environment:
            MYSQL_DATABASE: app_db
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
            - "3309:3306"
        command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
        networks:
            - backend

    zookeeper:
        image: debezium/zookeeper:2.2
        networks:
            - backend
        ports:
            - "2181:2181"
            - "2888:2888"
            - "3888:3888"
    kafka:
        image: debezium/kafka:2.2
        ports:
            - "9092:9092"
        networks:
            - backend
        environment:
            - ZOOKEEPER_CONNECT=zookeeper:2181

    connect:
        image: debezium/connect:2.2
        ports:
            - "8888:8083"
        networks:
            - backend
        environment:
            - BOOTSTRAP_SERVERS=kafka:9092
            - GROUP_ID=1
            - CONFIG_STORAGE_TOPIC=my_connect_configs
            - OFFSET_STORAGE_TOPIC=my_connect_offsets
            - STATUS_STORAGE_TOPIC=my_connect_statuses

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
            - "9020:8080"
        networks:
            - backend
        environment:
            - DYNAMIC_CONFIG_ENABLED=true
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
        volumes:
            - kafkaUIData:/etc/kafkaui

volumes:
    mysqldb:
        driver: local
    kafkaUIData:
        driver: local

networks:
    backend:
        driver: "bridge"
