version: '2.2'
services:
  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
      args:
        PHP_FPM_SERVER: php
        PHP_FPM_PORT: 9000
    ports:
      - ${DOCKER_NGINX_EXTERNAL_PORT-8000}:80
    depends_on:
      - php
    volumes:
      - .:/var/www/
    networks:
        - backend

  php:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        XDEBUG: "true"
    volumes:
      - .:/var/www/
      - ./docker/php.ini:/usr/local/etc/php/conf.d/php.ini
    environment:
      APP_ENV: local
    networks:
        - backend

  redis:
      image: redis:5.0.6
      ports:
          - ${DOCKER_REDIS_EXTERNAL_PORT-6379}:6379
      networks:
          - backend

  mysql:
      image: mysql:8.0
      volumes:
          - mysqldb:/var/lib/mysql
      environment:
          MYSQL_DATABASE: app_db
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      ports:
          - "3309:3306"
      command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
      networks:
          - backend

  kafka:
      image: wurstmeister/kafka
      ports:
          - "9092:9092"
      environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
          KAFKA_MESSAGE_MAX_BYTES: 2000000
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      volumes:
          - kafkaData:/kafka
          - /var/run/docker.sock:/var/run/docker.sock
      networks:
          - backend

  kafka2:
      image: wurstmeister/kafka
      ports:
          - "9093:9092"
      environment:
          KAFKA_BROKER_ID: 2
          KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9093
          KAFKA_MESSAGE_MAX_BYTES: 2000000
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      volumes:
          - kafkaData:/kafka
          - /var/run/docker.sock:/var/run/docker.sock
      networks:
          - backend

  kafka3:
      image: wurstmeister/kafka
      ports:
          - "9094:9092"
      environment:
          KAFKA_BROKER_ID: 3
          KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9094
          KAFKA_MESSAGE_MAX_BYTES: 2000000
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      volumes:
          - kafkaData:/kafka
          - /var/run/docker.sock:/var/run/docker.sock
      networks:
          - backend

  ### kafka-manager ###########################################
  kafka-manager:
      image: sheepkiller/kafka-manager
      ports:
          - "9020:9000"
      environment:
          ZK_HOSTS: zookeeper:2181
      networks:
          - backend

  zookeeper:
      build:
          context: .
          dockerfile: docker/Dockerfile.zookeeper
      volumes:
          - zookeeperData:/data
          - zookeeperDataLog:/datalog
      ports:
          - "2181:2181"
      networks:
          - backend

volumes:
    mysqldb:
        driver: local
    kafkaData:
        driver: local
    zookeeperData:
        driver: local
    zookeeperDataLog:
        driver: local

networks:
    backend:
        driver: "bridge"
